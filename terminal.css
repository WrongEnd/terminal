html, body {height: 100%;}
body {
  margin: 0; 
  position: relative;
  background: #000 url('backgroundterm.png') repeat left top;
  min-width: 960px;
}


@keyframes flicker {
  0% {
    opacity: 0.552;
  }
  5% {
    opacity: 0.48287;
  }
  10% {
    opacity: 0.59134;
  }
  15.0% {
    opacity: 0.79543;
  }
  20% {
    opacity: 0.75134;
  }
  25% {
    opacity: 0.1956;
  }
  30.0% {
    opacity: 0.90687;
  }
  35% {
    opacity: 0.122;
  }
  40% {
    opacity: 0.62254;
  }
  45% {
    opacity: 0.56977;
  }
  50% {
    opacity: 0.9925;
  }
  55.0% {
    opacity: 0.55487;
  }
  60.0% {
    opacity: 0.16607;
  }
  65% {
    opacity: 0.12353;
  }
  70% {
    opacity: 0.2214;
  }
  75% {
    opacity: 0.67908;
  }
  80% {
    opacity: 0.97163;
  }
  85.0% {
    opacity: 0.1275;
  }
  90% {
    opacity: 0.37186;
  }
  95% {
    opacity: 0.24475;
  }
  100% {
    opacity: 0.37221;
  }
}

.terminal .terminal-output .format, .cmd .format,
.cmd .prompt, .cmd .prompt div, .terminal .terminal-output div div{
    display: inline-block;
}
.cmd .clipboard {
    position: absolute;
    bottom: 0;
    left: 0;
    opacity: 0.01;
    filter: alpha(opacity = 0.01);
    filter: progid:DXImageTransform.Microsoft.Alpha(opacity=0.01);
    width: 2px;
}
.cmd > .clipboard {
    position: fixed;
}
.terminal {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    overflow: hidden;
    padding: 80px;
    box-shadow: inset 0px 0px 40px 40px rgba(0,0,0,0.75);
    background: url('eagle.png') no-repeat center center;
}
.terminal::after {
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background: rgba(18, 16, 16, 0.1);
  opacity: 0;
  z-index: 2;
  pointer-events: none;
}
.terminal::before {
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background: linear-gradient(rgba(18, 16, 16, 0) 50%, rgba(0, 0, 0, 0.25) 50%), linear-gradient(90deg, rgba(255, 0, 0, 0.06), rgba(0, 255, 0, 0.02), rgba(0, 0, 255, 0.06));
  z-index: 2;
  background-size: 100% 2px, 3px 100%;
  pointer-events: none;
}
.terminal::after {
  animation: flicker 0.15s infinite;
}
.cmd {
  padding: 0;
  margin: 0;
  height: 1.3em;
  /*margin-top: 5px;*/
}
@keyframes blink {
  0% { opacity: 1; }
  25% { opacity: 0; }
  50% { opacity: 0; }
  100% { opacity: 1; }
}
@-webkit-keyframes blink {
  0% { opacity: 1; }
  25% { opacity: 0; }
  50% { opacity: 0; }
  100% { opacity: 1; }
}
@-ms-keyframes blink {
  0% { opacity: 1; }
  25% { opacity: 0; }
  50% { opacity: 0; }
  100% { opacity: 1; }
}
@-moz-keyframes blink {
  0% { opacity: 1; }
  25% { opacity: 0; }
  50% { opacity: 0; }
  100% { opacity: 1; }
}
.cursor {
  background: #0c0;
  animation: blink 1s linear infinite;
  -webkit-animation: blink 1s infinite linear;
  -ms-animation: blink 1s infinite linear;
  -moz-animation: blink 1s infinite linear;
  -webkit-box-shadow: 0 0 5px rgba(0,100,0,50);
  -moz-box-shadow: 0 0 5px rgba(0,100,0,50);
  -ms-box-shadow: 0 0 5px rgba(0,100,0,50);
  -o-box-shadow: 0 0 5px rgba(0,100,0,50);
  box-shadow: 0 0 5px rgba(0,100,0,50);
}
.terminal .terminal-output div div, .cmd .prompt {
    display: block;
    line-height: 17.8px;
    height: auto;
}
.cmd .prompt {
    float: left;
}
.terminal, .cmd {
    font-family: FreeMono, monospace;
    color: #0c0;
    font-size: 14px;
    line-height: 17.8px;
}
.terminal-output > div {
    /*padding-top: 3px;*/
    min-height: 14px;
}
.terminal .terminal-output div span {
    display: inline-block;
}
.cmd span {
    float: left;
    /*display: inline-block; */
}
.terminal .inverted, .cmd .inverted, .cmd .cursor.blink {
    color: #0c0;
    text-shadow: 0 0 3px rgba(0,100,0,50);
}
.terminal .terminal-output div div::-moz-selection,
.terminal .terminal-output div span::-moz-selection,
.terminal .terminal-output div div a::-moz-selection {
    background-color: #aaa;
    color: #000;
}
.terminal .terminal-output div div::selection,
.terminal .terminal-output div div a::selection,
.terminal .terminal-output div span::selection,
.cmd > span::selection,
.cmd .prompt span::selection {
    background-color: #aaa;
    color: #000;
}
.terminal .terminal-output div.error, .terminal .terminal-output div.error div {
    color: red;
}
.tilda {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 1100;
}
.clear {
    clear: both;
}
.terminal a {
    color: #0F60FF;
}
.terminal a:hover {
    color: red;
}